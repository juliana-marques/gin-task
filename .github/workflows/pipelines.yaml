name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{secrets.GKE_PROJECT}}
  GKE_CLUSTER: github-actions-gke
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: github-actions-gke
  IMAGE: github-actions-gke-image
 

jobs:
  setup-build-publish-deploy:
    name: Setup Build Publish Deploy
    runs-on: ubuntu-latest

    steps:
        
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Obter o hash do Ãºltimo commit do Git
        run: |
          TAG=$(git rev-parse --short HEAD)
          echo "TAG=$TAG" >> $GITHUB_ENV
      
      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          service_account_key: ${{secrets.GKE_SA_KEY}}
          project_id: ${{secrets.GKE_PROJECT}}

      - name: Configure Docker
        run: |-
          gcloud --quiet auth configure-docker

      - name: Get GKE Credentials
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Build Docker Image
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:${{ env.TAG }}" .


      - name: Publish Docker Image to GCR
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:${{ env.TAG }}"

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: GKE Auth Plugin
        run: |-
          gcloud components install gke-gcloud-auth-plugin

      - name: Deploy Image to GKE cluster
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
